section	.text
   global _start    ; Indica al kernel d칩nde comienza la ejecuci칩n del programa.
   
_start:     ; Punto de inicio

   ; PRIMERA IMPRESION
   mov ecx, msg0 ; Agrega el mensaje        
   mov edx, len0 ; Aparta espacio de impresion (tama침o)
   mov eax, escribir    ; Escritura         
   mov ebx, salida  ; Descriptor de archivo de salida
   int 0x80   ; Llamar al kernel
   
   ; PRIMER NUMERO
   mov ecx, msg1 ; Agrega el mensaje        
   mov edx, len1 ; Aparta espacio de impresion (tama침o)
   mov eax, escribir    ; Escritura         
   mov ebx, salida  ; Descriptor de archivo de salida
   int 0x80   ; Llamar al kernel

   mov ecx, num1 ; Agrega variable
   mov edx, 2 ; Espacio de lectura (2 Bytes)
   mov eax, leer ; Lectura
   mov ebx, entrada ; Descriptor de archivo de entrada
   int 0x80  ; Llamar al kernel         

   ; SEGUNDO NUMERO
   mov ecx, msg2        
   mov edx, len2  
   mov eax, escribir        
   mov ebx, salida  
   int 0x80   
   
   mov ecx, num2 
   mov edx, 1
   mov eax, leer  
   mov ebx, entrada
   int 0x80        

   ; MENSAJE DE SALIDA
   mov ecx, msg3          
   mov edx, len3  
   mov eax, escribir         
   mov ebx, salida 
   int 0x80
	
   ; SUMA
   mov eax, [num1]
   sub eax, '0'
   mov ebx, [num2]
   sub ebx, '0'
   add eax, ebx
   add eax, '0'
   mov [res], eax

   ; IMPRIMIR SUMA
   mov ecx, res     
   mov edx, 1
   mov eax, escribir        
   mov ebx, salida
   int 0x80
    
   ; SALIDA DEL SISTEMA
   mov     eax, salir
   int     0x80

   
segment .data   ; Se utiliza para declarar datos inicializados o constantes.

   msg0 db "Suma de dos digitos sin contar acarreo", 0xA
   len0 equ $- msg0 
   
   msg1 db "Ingrese el primer digito ", 0xA
   len1 equ $- msg1 

   msg2 db "Ingrese el segundo digito", 0xA
   len2 equ $- msg2 

   msg3 db "La suma es: "
   len3 equ $- msg3
   
   ; Llamadas al sistema
    salir  equ 1
    leer  equ 3
    escribir equ 4
    entrada     equ 0
    salida    equ 1

segment .bss    ; Se utiliza para declarar variables.

   num1 resb 2
   num2 resb 2 
   res resb 1